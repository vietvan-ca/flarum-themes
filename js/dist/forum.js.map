{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@vietvan-ca/flarum-themes/webpack/bootstrap","webpack://@vietvan-ca/flarum-themes/webpack/runtime/compat get default export","webpack://@vietvan-ca/flarum-themes/webpack/runtime/define property getters","webpack://@vietvan-ca/flarum-themes/webpack/runtime/hasOwnProperty shorthand","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['forum/app']\"","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['common/extend']\"","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@vietvan-ca/flarum-themes/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@vietvan-ca/flarum-themes/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['common/Component']\"","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['common/components/Link']\"","webpack://@vietvan-ca/flarum-themes/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@vietvan-ca/flarum-themes/./src/forum/components/TopicColumn.js","webpack://@vietvan-ca/flarum-themes/./src/forum/components/ReplyColumn.js","webpack://@vietvan-ca/flarum-themes/./src/forum/components/ViewColumn.js","webpack://@vietvan-ca/flarum-themes/./src/forum/utils/discussionHelpers.js","webpack://@vietvan-ca/flarum-themes/./src/forum/components/ActivityColumn.js","webpack://@vietvan-ca/flarum-themes/./src/forum/components/CustomDiscussionRow.js","webpack://@vietvan-ca/flarum-themes/./src/forum/components/DiscussionListHeader.js","webpack://@vietvan-ca/flarum-themes/./src/forum/components/HeroSection.js","webpack://@vietvan-ca/flarum-themes/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Link from 'flarum/common/components/Link';\nimport icon from 'flarum/common/helpers/icon';\n\n/**\n * Renders the topic column with title, tags, and excerpt\n */\nexport default class TopicColumn extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n    const firstPost = discussion.firstPost();\n    const tags = discussion.tags() || [];\n    \n    // Get sticky and locked status\n    const isSticky = discussion.isSticky();\n    const isLocked = discussion.isLocked();\n    \n    return m('div.discussion-topic', [\n      m('div.discussion-badges', [\n        // Display sticky and locked badges if applicable\n        isSticky ? m('span.Badge.Badge--sticky', [\n          icon('fas fa-thumbtack')\n        ]) : null,\n        isLocked ? m('span.Badge.Badge--locked', [\n          icon('fas fa-lock'),\n        ]) : null,\n      ]),\n      m('div.discussion-title', [\n        m(Link, { \n          href: app.route.discussion(discussion) \n        }, discussion.title())\n      ]),\n      m('div.discussion-tags', [\n        tags.map(tag => m('span.discussion-tag', { \n          className: tag.color() ? 'colored' : '',\n          style: tag.color() ? { backgroundColor: tag.color() } : {}\n        }, tag.name())),\n      ]),\n      app.forum.attribute('custom-discussion-list.enable_excerpts') !== false ? \n        m('div.discussion-excerpt', firstPost?.contentPlain() || '') : null\n    ]);\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\n\n/**\n * Renders the reply count column\n */\nexport default class ReplyColumn extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n    const replyCount = discussion.replyCount() ?? 0;\n\n    return m('div.discussion-reply', [\n      m('span', replyCount),\n    ]);\n  }\n}\n","import Component from 'flarum/common/Component';\n\n/**\n * Renders the view count column\n */\nexport default class ViewColumn extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n    const viewCount = discussion.attribute('views') || 0;\n    \n    return m('div.discussion-view', [\n      m('span', viewCount)\n    ]);\n  }\n}","/**\n * Helper function to calculate time since in days\n */\nexport function getTimeSince(date) {\n  const now = new Date();\n  const diffTime = Math.abs(now - date);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n  if (diffDays < 1) {\n    // Less than a day, show hours\n    const diffHours = Math.floor(diffTime / (1000 * 60 * 60));\n    return diffHours + 'h';\n  } else if (diffDays < 30) {\n    // Less than a month, show days\n    return diffDays + 'd';\n  } else {\n    // More than a month, show months\n    const diffMonths = Math.floor(diffDays / 30);\n    return diffMonths + 'mo';\n  }\n}\n\n/**\n * Helper function to get user initials\n */\nexport function getInitials(username) {\n  if (!username) return '';\n  return username.charAt(0).toUpperCase();\n}\n\n/**\n * Helper function to get color class based on index\n */\nexport function getColorClass(index) {\n  const colorClasses = ['color-1', 'color-2', 'color-3', 'color-4', 'color-5'];\n  return colorClasses[index % colorClasses.length];\n}\n\n/**\n * Renders user avatar with either image or initials\n */\nexport function renderUserAvatar(user, index) {\n  if (!user) return null;\n  \n  const userName = user.username || '';\n  const avatarUrl = user.avatar_url;\n  \n  if (avatarUrl) {\n    // If avatar URL exists, render the image\n    return m('span.user-avatar', { title: userName }, \n      m('img.avatar-image', {\n        src: avatarUrl,\n        alt: userName\n      })\n    );\n  } else {\n    // If no avatar URL, show initials with color background\n    return m('span.user-avatar', { title: userName },\n      m('span.user-initial', { \n        className: getColorClass(index)\n      }, \n        getInitials(userName)\n      )\n    );\n  }\n}","import Component from 'flarum/common/Component';\nimport { getTimeSince, renderUserAvatar } from '../utils/discussionHelpers';\n\n/**\n * Renders the activity column with time since last post and active users\n */\nexport default class ActivityColumn extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n    const lastPostedAt = discussion.lastPostedAt();\n    const timeSince = lastPostedAt ? getTimeSince(new Date(lastPostedAt)) : '';\n    const latestPosters = discussion.attribute('latestPosters') || [];\n    \n    return m('div.discussion-work', [\n      m('div.time-since', timeSince),\n      m('div.active-users', latestPosters.slice(0, 5).map((user, i) => \n        renderUserAvatar(user, i)\n      ))\n    ]);\n  }\n}","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Link from 'flarum/common/components/Link';\nimport TopicColumn from './TopicColumn';\nimport ReplyColumn from './ReplyColumn';\nimport ViewColumn from './ViewColumn';\nimport ActivityColumn from './ActivityColumn';\n\n/**\n * The main row component for discussions in the discussion list\n */\nexport default class CustomDiscussionRow extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n\n    return m(Link, {\n      className: 'discussion-row',\n      href: app.route.discussion(discussion),\n    }, [\n      m(TopicColumn, { discussion }),\n      m(ReplyColumn, { discussion }),\n      m(ViewColumn, { discussion }),\n      m(ActivityColumn, { discussion }),\n    ]);\n  }\n}\n","import Component from 'flarum/common/Component';\nimport app from 'flarum/forum/app';\n\n\n/**\n * Renders the header for the discussion list\n */\n\nexport default class DiscussionListHeader extends Component {\n  view() {\n    return (\n      <li className=\"CustomDiscussionList-header\">\n        <div className=\"DiscussionListItem-info topic\">\n          {app.translator.trans('vietvan-ca-flarum-themes.forum.custom-discussion-header.topic')}\n        </div>\n        <div className=\"DiscussionListItem-info replies\">\n          {app.translator.trans('vietvan-ca-flarum-themes.forum.custom-discussion-header.replies')}\n        </div>\n        <div className=\"DiscussionListItem-info views\">\n          {app.translator.trans('vietvan-ca-flarum-themes.forum.custom-discussion-header.views')}\n        </div>\n        <div className=\"DiscussionListItem-info activity\">\n          {app.translator.trans('vietvan-ca-flarum-themes.forum.custom-discussion-header.activity')}\n        </div>\n      </li>\n    );\n  }\n}\n","import Component from 'flarum/common/Component';\n\n/**\n * Renders the hero section of the page\n */\n\nexport default class HeroSection extends Component {\n  view() {\n    return (\n      <div className=\"HeroSection\">\n        <div className=\"container\">\n          <h1 className=\"HeroSection-title\"> {app.translator.trans('vietvan-ca-flarum-themes.forum.hero.title')}</h1>\n          <p className=\"HeroSection-subtitle\">{app.translator.trans('vietvan-ca-flarum-themes.forum.hero.description')}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\n\nimport CustomDiscussionRow from './components/CustomDiscussionRow';\nimport DiscussionListHeader from './components/DiscussionListHeader';\nimport HeroSection from './components/HeroSection';\n\napp.initializers.add('flarum-themes', () => {\n  // Extend the DiscussionListItem component to use the custom row\n  extend(DiscussionListItem.prototype, 'view', function (vnode) {\n    vnode.children = [\n      m(CustomDiscussionRow, {\n        discussion: this.attrs.discussion,\n      }),\n    ];\n  });\n\n  // Extend the DiscussionList component to add a header\n  extend(DiscussionList.prototype, 'view', function (vnode) {\n    const originalChildren = vnode.children;\n    vnode.children = [m('ul.DiscussionList', [m(DiscussionListHeader), ...originalChildren])];\n  });\n\n  // Extend the IndexPage component to add a hero section\n  extend(IndexPage.prototype, 'view', function (vnode) {\n    const heroSection = m(HeroSection);\n    const originalChildren = vnode.children;\n    vnode.children = [heroSection, ...originalChildren];\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","TopicColumn","_Component","apply","arguments","view","discussion","this","attrs","firstPost","tags","isSticky","isLocked","m","icon","Link","href","app","title","map","tag","className","color","style","backgroundColor","name","attribute","contentPlain","Component","ReplyColumn","_discussion$replyCoun","replyCount","ViewColumn","viewCount","getColorClass","index","colorClasses","length","ActivityColumn","date","now","diffTime","diffDays","lastPostedAt","timeSince","Date","Math","abs","ceil","floor","latestPosters","slice","user","i","username","userName","avatarUrl","avatar_url","src","alt","charAt","toUpperCase","renderUserAvatar","CustomDiscussionRow","DiscussionListHeader","trans","HeroSection","translator","add","extend","DiscussionListItem","vnode","children","DiscussionList","originalChildren","concat","IndexPage","heroSection"],"sourceRoot":""}